# XCodegen YML file for iOS Sample Project

include:
  - path: xcodegen/defaults.yml
    relativePaths: false
  - path: xcodegen/entitlements.yml
    relativePaths: false
  - path: xcodegen/infoPlist.yml
    relativePaths: false
  - path: xcodegen/packages.yml
    relativePaths: false
  - path: xcodegen/amazon.yml
    relativePaths: false
  - local.yml

options:
  createIntermediateGroups: true
  bundleIdPrefix: ${BUNDLE_PREFIX}
  deploymentTarget:
    iOS: "13"

name: iOSSDKExample

settings:
  base:
    PRODUCT_BUNDLE_IDENTIFIER: ${BUNDLE_PREFIX}.sample

targetTemplates:
  Common:
    type: application
    platform: iOS
    deploymentTarget: "13.0"
    settings:
      base:
        PRODUCT_NAME: "SDK Demo"
    sources:
      - path: iOSSDKExample/Sources
      - path: iOSSDKExample/Supporting Files
    dependencies:
      - package: ActivityIndicator
      - package: ALProgressView
      - package: CXoneChatSDK
      - package: IQKeyboardManagerSwift
      - package: Kingfisher
      - package: MessageKit
      - package: SnapKit
      - package: PKCE
      - package: Swinject
      - package: SwinjectAutoregistration
      - package: Toast
    postCompileScripts:
      - script: |
          if [[ "$(uname -m)" == arm64 ]]; then
            export PATH="/opt/homebrew/bin:$PATH"
          fi

          if which swiftlint > /dev/null; then
            swiftlint --config .swiftlint.yml
          else
            echo "warning: SwiftLint not installed, run brew install swiftlint"
          fi
        name: Swiftlint
        basedOnDependencyAnalysis: false
      - script: |
          if [[ "$(uname -m)" == arm64 ]]; then
            export PATH="/opt/homebrew/bin:$PATH"
          fi

          if which swiftgen > /dev/null; then
            swiftgen config -c .swiftgen.yml
          else
            echo "warning: SwiftGen not installed, run brew install swiftgen"
          fi
          
        name: SwiftGen
        runOnlyWhenInstalling: true
        basedOnDependencyAnalysis: true

targets:
  iOSSDKExample:
    templates: [Common, Entitled, Info, Amazon]

schemes:
  iOSSDKExample:
    build:
      targets:
        iOSSDKExample: all
